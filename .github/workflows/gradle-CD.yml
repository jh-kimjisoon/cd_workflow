name: Java CD with Gradle

on:
  push:
    branches: ['main', 'develop', 'release']
  workflow_run:
    workflows: Java CI with Gradle
    types:
      - completed

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'adopt'

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4

    - name: Build with Gradle
      run: |
        chmod +x ./gradlew
        ./gradlew build

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=sha

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  deploy:
    needs: build-and-push-image
    environment: DEV
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: checkout to triggered commit
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha

      - name: deploy to DEV
        if: contains(${{ github.ref }}, 'develop')
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.DEV_HOST }}
          username: ${{ secrets.DEV_USERNAME }}
          password: ${{ secrets.DEV_PASSWORD }}
          port: ${{ secrets.DEV_SSH_PORT }}
          script: |
            echo ${{ secrets.DEV_PASSWORD }} | sudo -S docker login ghcr.io -u ${{ github.actor }} --password ${{ secrets.GITHUB_TOKEN }}
            echo ${{ secrets.DEV_PASSWORD }} | sudo -S docker rm -f $(echo ${{secrets.DEV_PASSWORD}} | sudo -S docker ps -aqf "name=${{ env.IMAGE_NAME }}") || true
            echo ${{ secrets.DEV_PASSWORD }} | sudo -S docker run -p 8080:8080 --name ${{ env.IMAGE_NAME }} -d ${{ steps.meta.outputs.tags }}
